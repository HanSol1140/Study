public class Main {
    private int hour;
    private int minute;
    private float second;
    public void setHour(int h){
        if(h < 0 || h > 23) return;
        hour = h;
    }
    // private 제어자를 통해서 변수의 값을 직접 변경하지 못하게 하고,
    // 대신 메서드를 통해서 값을 변경하게 만듭니다.
    // 이후 값을 변경할 때 지정된 값의 유효성을 조건문으로 점검한 다음에 유효한 값일 경우에만 변경합니다.

    //캡슐화
        // 변수에 직접 접근하는 것을 제한하여 변수의 값을 보호하고, 클래스 외부에서의 부적절한 접근을 방지합니다.
        // 이는 코드의 안정성과 유지보수성을 높입니다.

    // 유효성 검사
        // setter를 사용하여 변수의 값을 변경할 때, 특정 조건을 검사하고 유효한 값만 변수에 저장할 수 있습니다.
        // 이를 통해 변수에 유효하지 않은 값이 저장되는 것을 방지할 수 있습니다.

    // 코드 변경 유연성
        // 변수에 직접 접근하지 않고 getter와 setter를 사용하면, 내부 구현을 변경하거나 추가적인 로직을 적용하기 쉬워집니다.
        // 예를 들어, 변수 값을 가져올 때 특정 조건에 따라 가공한 값을 반환하거나, 변수 값을 변경하기 전에 로깅 또는 이벤트 처리를 추가할 수 있습니다.


    public static void main(String[] args) {

    }
}