# 함수 생성
def pick():
    pass

# 함수 실행
print(pick()) # None이 반환됩니다 / return값이 없으므로

# ===============================
print("="*20)

# 함수 생성
def pick(item, ea):
    """무엇을 주었는지 알려주는 함수."""
    print("나는 {}을(를) '{}'개 주웠다.".format(item, ea))

# 함수 실행
print(pick("연필", 2))
# 결과
# 나는 연필을(를) '2'개 주었다. // 함수 안에 print가 있기때문
# None // return값이 없으므로

# ===============================
print("="*20)
def greet(username):
    """아침 인사를 합니다."""
    print("안녕하세요! {} 좋은 아침입니다.".format(username))
greet("한솔")
# 안녕하세요! 한솔 좋은 아침입니다.


# 위의 pick과 greet의 차이가 무슨차이냐면
# print(함수)로 실행한 것과 그냥 함수를 실행한 것의 차이입니다.
# print()에서 함수를 실행했으므로 함수에 따른 리턴값을 print해야되는데
# 값이 없으므로 none을 반환해서 출력한 경우고

# 아래는 그냥 greet("한솔")을 통해 함수자체를 실행해서 print가 실행됬지만
# 함수의 return값이 출력되야할 이유가 없기 때문에 구현된 함수의 기능만 나왔습니다.


# ===============================
print("="*20)

def clean():
    print("청소를 시작합니다.")

clean()

# 고정된 기능을 사용할땐 매개변수가 없어도 됩니다.